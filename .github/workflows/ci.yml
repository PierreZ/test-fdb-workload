# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup FoundationDB
        uses: foundationdb-rs/foundationdb-actions-install@v2.0.0
        with:
          version: "7.1.6"

      - name: whereis fdbserver
        run: whereis fdbserver

      - name: check so
        run: file /usr/lib/libfdb_c.so

      - name: check headers
        run: file /usr/include/foundationdb/*.h

      - name: check current path
        run: pwd

      - name: create ouput folder
        run: mkdir out

      - name: build
        run: make

      - name: check fdbserver
        run : fdbserver --help
      - name: check g++
        run: g++ --version
      - name: check lib
        run: file ./lib/libcppwl.so
      - name: check linkage
        run: readelf -a ./lib/libcppwl.so | grep "(NEEDED)"

      - name: run simulation
        run: fdbserver -r simulation -f ./test_file.txt --trace-format json

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: traces.json
          path: ./trace*

  # Building FDB
  build-fdb:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: foundationdb/build:centos7-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: git clone
        run: git clone https://github.com/apple/foundationdb.git
        working-directory: /root

      - name: git checkout
        run: git checkout release-7.1
        working-directory: /root/foundationdb

      - name: mkdir build_output
        run: mkdir build_output
        working-directory: /root

      - name: cmake
        run: source /opt/rh/devtoolset-8/enable && source /opt/rh/rh-python38/enable && cmake -G Ninja ../foundationdb
        working-directory: /root/build_output

      - name: ninja targets
        run: source /opt/rh/devtoolset-8/enable && source /opt/rh/rh-python38/enable && ninja -t targets all
        working-directory: /root/build_output

      - name: ninja targets
        run: source /opt/rh/devtoolset-8/enable && source /opt/rh/rh-python38/enable && ninja -t targets all | grep workload
        working-directory: /root/build_output

      - name: ninja build c_workloads
        run: source /opt/rh/devtoolset-8/enable && source /opt/rh/rh-python38/enable && ninja -v -j1 c_workloads
        working-directory: /root/build_output

